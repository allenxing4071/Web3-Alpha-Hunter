# Claude Code 项目规则

## 🎯 项目理解协议

每次新对话开始时，请遵循以下步骤：

1. **优先阅读上下文文件**
   - 首先阅读 `.claudecontext` 文件了解项目全局信息
   - 查看 `docs/README.md` 了解文档结构
   - 参考 `README.md` 了解快速启动

2. **确认项目状态**
   - 检查 git status 了解当前修改
   - 查看最近的 git commits 了解最新进展
   - 如需数据库相关操作，参考 `docs/02-技术实现/04-数据库设计文档-完整版.md`

3. **定位相关文档**
   - 功能开发: 查看 `docs/03-功能模块/`
   - 技术问题: 查看 `docs/02-技术实现/`
   - 配置问题: 查看 `guides/config/`
   - 快速问题: 查看 `docs/快速指南/`

## 📋 开发规范

### 代码规范
- **后端**: 遵循FastAPI最佳实践，使用类型提示
- **前端**: 遵循React/Next.js规范，使用TypeScript严格模式
- **命名**: 数据库表用复数，模型类用单数
- **注释**: 复杂逻辑必须添加中文注释

### 数据库操作规范
- **禁止直接修改数据库**: 必须通过 Alembic 迁移
- **模型定义位置**: `backend/app/models/`
- **迁移文件位置**: `backend/alembic/versions/`
- **执行迁移**: `alembic upgrade head`

### API开发规范
- **路由位置**: `backend/app/api/v1/`
- **Schema位置**: `backend/app/schemas/`
- **响应格式**: 统一使用 `{"success": bool, "data": any, "message": str}`
- **权限控制**: 使用装饰器 `@require_admin` 或 `@require_user`

### 前端开发规范
- **组件位置**: `frontend/src/components/`
- **页面位置**: `frontend/src/app/`
- **API调用**: 使用 `lib/api.ts` 封装的方法
- **状态管理**: 使用 Zustand，store 位于 `store/` 目录

## 🚫 禁止操作

1. **禁止删除或修改现有数据库数据**（除非明确要求）
2. **禁止修改核心配置文件**（如 `config.py`）而不通知
3. **禁止提交敏感信息**（API密钥、密码等）到 git
4. **禁止跳过测试直接部署到生产环境**

## ✅ 推荐操作

1. **优先使用现有组件和工具**
   - 使用 `scripts/` 目录的启动脚本
   - 复用 `frontend/src/components/` 的UI组件
   - 使用已配置的API客户端

2. **文档驱动开发**
   - 功能开发前先查看是否有相关文档
   - 重大变更后更新 `.claudecontext`
   - 新增模块时在 `docs/03-功能模块/` 创建文档

3. **渐进式开发**
   - 小步快跑，每次改动尽量小
   - 及时测试，避免累积问题
   - 重要功能开发分支

## 🔍 问题排查流程

1. **查看日志**
   - 后端日志: 终端输出或日志文件
   - 前端错误: 浏览器控制台
   - 数据库错误: PostgreSQL日志

2. **检查配置**
   - 环境变量: `.env` 文件
   - 数据库连接: `backend/app/core/config.py`
   - API端点: 检查前端配置是否正确

3. **参考文档**
   - 功能问题: `docs/03-功能模块/`
   - API问题: `docs/02-技术实现/02-API接口文档.md`
   - 部署问题: `docs/04-部署与运维/`

## 📝 commit规范

- `feat:` 新功能
- `fix:` 修复bug
- `docs:` 文档更新
- `refactor:` 代码重构
- `test:` 测试相关
- `chore:` 构建/工具/依赖更新

示例: `feat: 添加KOL评分算法` 或 `fix: 修复项目列表分页问题`

## 🎯 AI助手特别提醒

1. **记忆持久化**: 重要决策和变更请更新 `.claudecontext` 文件
2. **文档同步**: 新功能开发完成后，同步更新相关文档
3. **上下文传递**: 每次对话开始时主动阅读上下文文件
4. **避免重复**: 遇到问题先查文档，避免重复回答

---

**最后更新**: 2025-10-13
